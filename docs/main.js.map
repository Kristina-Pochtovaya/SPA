{"version":3,"sources":["./src/app/second-page/models/user.model.ts","./src/environments/environment.ts","./src/app/third-page/third-page.component.ts","./src/app/third-page/third-page.component.html","./src/app/first-page/first-page.component.ts","./src/app/first-page/first-page.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/third-page/userMore.model.ts","./src/app/app.module.ts","./src/app/second-page/second-page.component.ts","./src/app/second-page/second-page.component.html","./src/app/second-page/ages.validators.ts","./src/app/not-found/not-found.component.ts","./src/app/not-found/not-found.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export class User {\n    firstName: string;\n    lastName: string;\n    ages: number;\n    email: string;\n    password: string;\n\n    constructor(firstName: string, lastName: string, ages: number,    email: string, password: string) {\n        this.firstName = firstName;\n        this.lastName = lastName;\n        this.ages = ages;\n        this.email = email;\n        this.password = password;\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { UserMore } from './userMore.model';\n\n@Component({\n  selector: 'app-third-page',\n  templateUrl: './third-page.component.html',\n  styleUrls: ['./third-page.component.less']\n})\nexport class ThirdPageComponent implements OnInit {\n\n  thirdPageForm: FormGroup;\n  male: string = 'Male';\n  children: boolean = false;\n  job: boolean = false;\n\n  usersMore: UserMore[] = [];\n\n  constructor() { }\n\n  ngOnInit() {\n    console.log(this.usersMore);\n    this.thirdPageForm = new FormGroup({\n      male: new FormControl(null),\n      children: new FormControl(false),\n      job: new FormControl(false)\n    });\n  }\n\n  addPersonalInfoMore(): void {\n    this.usersMore.push(new UserMore(this.male, this.children, this.job))\n    this.clearInfo();\n    console.log(this.usersMore); \n  }\n  clearInfo(): void {\n    this.male = 'Male';\n    this.children = false;\n    this.job = false;\n  }\n\n}\n","<div class=\"thirdPage-container\">\n    <div class=\"header\">\n        <img src=\"./assets/headerfooter.jpg\"  class=\"headerImage\" />\n    </div>\n    <form \n        class=\"thirdPage-form\"\n        [formGroup]=\"thirdPageForm\"\n    >\n        <div class=\"thirdPage-content\">\n            <div >\n                <label  class=\"titleLabel\" for=male>Male: </label>\n                <select\n                    class=\"input\"\n                    formControlName=\"male\"\n                    [(ngModel)]=\"male\"\n                >\n                    <option value=\"Male\">Male</option>\n                    <option value=\"Female\">Female</option>\n              </select>\n            </div>\n            <div>\n                <label  class=\"titleLabel\" for=children>Have children: </label>\n                <input \n                    class=\"input\"\n                    formControlName=\"children\"\n                    [(ngModel)]=\"children\"\n                    id=\"children\" \n                    type=\"checkbox\" \n                >\n            </div>\n            <div>\n                <label class=\"titleLabel\" for=job>Got a job: </label>\n                <input \n                    class=\"input\"\n                    formControlName=\"job\"\n                    [(ngModel)]=\"job\"\n                    id=\"job\" \n                    type=\"checkbox\"  \n                >\n            </div>\n            <div class=\"action\">\n                <button \n                    type=\"submit\"\n                    class=\"buttonThirdPage\"\n                    (click)=\"addPersonalInfoMore()\"\n                >\n                        Add\n                </button>\n            </div>\n        </div>\n    </form>\n    <div class=\"footer\">\n            <img src=\"./assets/headerfooter.jpg\"  class=\"footerImage\" />\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-first-page',\n  templateUrl: './first-page.component.html',\n  styleUrls: ['./first-page.component.less']\n})\nexport class FirstPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"firstPage-container\">\n    <img src=\"./assets/landscape.jpg\"  class=\"background\" />\n    <div class=\"body\">\n    <h1>Welcome to our website</h1>\n    <div class=\"buttonGroups\">\n        <a routerLink=\"/second-page\">\n            <button class=\"secondPage\" type=\"button\">Second Page</button>\n        </a>\n        <a routerLink=\"/third-page\">\n            <button class=\"thirdPage\" type=\"button\">Third Page</button>\n        </a>\n    </div>\n</div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n  title = 'SPA';\n}\n","<router-outlet></router-outlet>","export class UserMore {\n    male: string;\n    children: boolean;\n    job: boolean;\n\n    constructor(male: string, children: boolean, job: boolean) {\n        this.male = male;\n        this.children = children;\n        this.job = job;\n    }\n}","import { Component, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FirstPageComponent } from './first-page/first-page.component';\nimport { SecondPageComponent } from './second-page/second-page.component';\nimport { ThirdPageComponent } from './third-page/third-page.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\n\nconst appRoutes: Routes = [\n  {path: '', component: FirstPageComponent},\n  {path: 'second-page', component: SecondPageComponent},\n  {path: 'third-page', component: ThirdPageComponent},\n  {path: '**', component: NotFoundComponent}\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FirstPageComponent,\n    SecondPageComponent,\n    ThirdPageComponent,\n    NotFoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { User } from './models/user.model';\nimport { AgesInputValidators } from './ages.validators';\n\n@Component({\n  selector: 'app-second-page',\n  templateUrl: './second-page.component.html',\n  styleUrls: ['./second-page.component.less']\n})\nexport class SecondPageComponent implements OnInit {\n\n  secondPageForm: FormGroup;\n  firstName: string;\n  lastName: string;\n  myAges: number;\n  email: string;\n  password: string;\n\n  users: User[] = [];\n\n  constructor() { }\n\n  ngOnInit() {\n    console.log(this.users);\n    this.secondPageForm = new FormGroup({\n      firstName: new FormControl(null),\n      lastName: new FormControl(null),\n      ages: new FormControl(null, AgesInputValidators.cannotContainCharacters),\n      email: new FormControl(null),\n      password: new FormControl(null)\n    });\n  }\n\n  get ages() {\n    return this.secondPageForm.get('ages');\n  }\n\n  addPersonalInfo(): void {\n    this.users.push(new User(this.firstName, this.lastName, this.myAges, this.email, this.password))\n    this.clearInfo();\n    console.log(this.users); \n  }\n  clearInfo(): void {\n    this.firstName = null;\n    this.lastName = null;\n    this.myAges = null;\n    this.email = null;\n    this.password = null;\n  }\n\n}\n","<div class=\"secondPage-container\">\n    <div class=\"header\">\n        <img src=\"./assets/headerfooter.jpg\"  class=\"headerImage\" />\n    </div>\n    <form \n        class=\"secondPage-form\"\n        [formGroup]=\"secondPageForm\"\n    >\n        <div class=\"secondPage-content\">\n            <div >\n                <label  class=\"titleLabel\" for=firstName>First name: </label>\n                <input \n                    class=\"input\"\n                    formControlName=\"firstName\"\n                    [(ngModel)]=\"firstName\"\n                    id=\"firstName\" \n                    type=\"text\" \n                >\n            </div>\n            <div>\n                <label  class=\"titleLabel\" for=lastName>Last name: </label>\n                <input \n                    class=\"input\"\n                    formControlName=\"lastName\"\n                    [(ngModel)]=\"lastName\"\n                    id=\"lastName\" \n                    type=\"text\" \n                >\n            </div>\n            <div>\n                <label class=\"titleLabel\" for=ages>Ages: </label>\n                <input \n                    class=\"input\"\n                    formControlName=\"ages\"\n                    [(ngModel)]=\"myAges\"\n                    id=\"ages\" \n                    type=\"text\" \n                >\n                <div class=\"agesError\" *ngIf=\"ages.touched && ages.invalid\">\n                    <div *ngIf=\"ages.errors.cannotContainCharacters\">Ages cannot contain characters</div>\n                </div>\n            </div>\n            <div>\n                <label class=\"titleLabel\" for=email>E-mail: </label>\n                <input \n                    class=\"input\"    \n                    formControlName=\"email\"\n                    [(ngModel)]=\"email\"\n                    id=\"email\" \n                    type=\"email\" \n                >\n            </div>\n            <div>\n                <label class=\"titleLabel\" for=password>Password: </label>\n                <input \n                    class=\"input\"\n                    formControlName=\"password\"\n                    [(ngModel)]=\"password\"\n                    id=\"password\" \n                    type=\"password\" \n                >\n            </div>\n            <div class=\"action\">\n                <button \n                    type=\"submit\"\n                    class=\"buttonSecondPage\"\n                    (click)=\"addPersonalInfo()\"\n                >\n                        Add\n                </button>\n            </div>\n        </div>\n    </form>\n    <div class=\"footer\">\n            <img src=\"./assets/headerfooter.jpg\"  class=\"footerImage\" />\n    </div>\n</div>\n","import {AbstractControl, ValidationErrors} from '@angular/forms';\n\nexport class AgesInputValidators {\n    static cannotContainCharacters(control: AbstractControl): ValidationErrors | null {\n        let val = control.value;\n\n        if(isNaN(val)){\n            return {cannotContainCharacters: true}\n        }\n\n        return null;\n    }\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.less']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"notFound-container\">\n    <div class=\"header\">\n        <img src=\"./assets/headerfooter.jpg\"  class=\"headerImage\" />\n    </div>\n    <h1 class=\"content\">Страница не найдена</h1>\n    <div class=\"footer\">\n        <img src=\"./assets/headerfooter.jpg\"  class=\"footerImage\" />\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}